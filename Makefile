APPS = api controller event library-go library-js
APPS_COMPONENT = api controller event

.PHONY: all-generate
all-generate: generate-api generate-controller generate-event generate-library-go generate-library-js

.PHONY: generate-api
generate-api:
	dp generate-project  --create-repository n --name "dp-hello-world-api" --description "Example api project generated by dp-cli" --rt-version 1.23.4 --port 8123 --project-location . --type api --team-slugs dissemination

.PHONY: generate-controller
generate-controller:
	dp generate-project  --create-repository n --name "dp-hello-world-controller" --description "Example controller project generated by dp-cli" --rt-version 1.23.4 --port 8124 --project-location . --type controller --team-slugs dissemination

.PHONY: generate-event
generate-event:
	dp generate-project  --create-repository n --name "dp-hello-world-event" --description "Example event driven app project generated by dp-cli" --rt-version 1.23.4 --port 8123 --project-location . --type event-driven --team-slugs dissemination

.PHONY: generate-library-go
generate-library-go:
	dp generate-project  --create-repository n --name "dp-hello-world-library-go" --description "Example go library project generated by dp-cli" --rt-version 1.23.4 --project-location . --project-language go --type library --team-slugs dissemination

.PHONY: generate-library-js
generate-library-js:
	dp generate-project  --create-repository n --name "dp-hello-world-library-js" --description "Example javascript library project generated by dp-cli" --rt-version 20.3.1 --project-location . --project-language javascript --type library --team-slugs dissemination

.PHONY: all-tests
all-tests: audit build lint test test-component

.PHONY: audit
audit:
	for app in $(APPS) ; do \
    	cd dp-hello-world-$$app ; \
		make audit; \
		cd .. ; \
	done

.PHONY: build
build:
	for app in $(APPS) ; do \
    	cd dp-hello-world-$$app ; \
		make build; \
		cd .. ; \
	done

.PHONY: lint
lint:
	for app in $(APPS) ; do \
    	cd dp-hello-world-$$app ; \
		make lint; \
		cd .. ; \
	done

.PHONY: test
test:
	for app in $(APPS) ; do \
    	cd dp-hello-world-$$app ; \
		make test; \
		cd .. ; \
	done

.PHONY: test-component
test-component:
	for app in $(APPS_COMPONENT) ; do \
    	cd dp-hello-world-$$app ; \
		make test-component; \
		cd .. ; \
	done
